public abstract class dev/adamko/kotlin/binary_compatibility_validator/BCVPlugin : org/gradle/api/Plugin {
	public static final field API_CHECK_TASK_NAME Ljava/lang/String;
	public static final field API_DIR Ljava/lang/String;
	public static final field API_DUMP_TASK_NAME Ljava/lang/String;
	public static final field API_GENERATE_TASK_NAME Ljava/lang/String;
	public static final field Companion Ldev/adamko/kotlin/binary_compatibility_validator/BCVPlugin$Companion;
	public static final field EXTENSION_NAME Ljava/lang/String;
	public static final field PREPARE_API_GENERATE_TASK_NAME Ljava/lang/String;
	public static final field RUNTIME_CLASSPATH_CONFIGURATION_NAME Ljava/lang/String;
	public static final field RUNTIME_CLASSPATH_RESOLVER_CONFIGURATION_NAME Ljava/lang/String;
	public static final field TASK_GROUP Ljava/lang/String;
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/plugins/PluginAware;)V
}

public final class dev/adamko/kotlin/binary_compatibility_validator/BCVPlugin$Companion {
}

public abstract class dev/adamko/kotlin/binary_compatibility_validator/BCVProjectExtension : dev/adamko/kotlin/binary_compatibility_validator/targets/BCVTargetBaseSpec, org/gradle/api/plugins/ExtensionAware {
	public abstract fun getEnabled ()Lorg/gradle/api/provider/Property;
	public abstract fun getIgnoredClasses ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getIgnoredMarkers ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getIgnoredPackages ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getKotlinxBinaryCompatibilityValidatorVersion ()Lorg/gradle/api/provider/Property;
	public abstract fun getNonPublicMarkers ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getOutputApiDir ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getProjectName ()Lorg/gradle/api/provider/Property;
	public abstract fun getPublicClasses ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getPublicMarkers ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getPublicPackages ()Lorg/gradle/api/provider/SetProperty;
	public final fun getTargets ()Lorg/gradle/api/ExtensiblePolymorphicDomainObjectContainer;
}

public abstract class dev/adamko/kotlin/binary_compatibility_validator/BCVProjectPlugin : org/gradle/api/Plugin {
	public static final field Companion Ldev/adamko/kotlin/binary_compatibility_validator/BCVProjectPlugin$Companion;
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
}

public final class dev/adamko/kotlin/binary_compatibility_validator/BCVProjectPlugin$Companion {
}

public abstract class dev/adamko/kotlin/binary_compatibility_validator/BCVSettingsPlugin : org/gradle/api/Plugin {
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/initialization/Settings;)V
}

public abstract class dev/adamko/kotlin/binary_compatibility_validator/BCVSettingsPlugin$Extension {
	public final fun defaultTargetValues (Lorg/gradle/api/Action;)V
	public final fun getDefaultTargetValues ()Ldev/adamko/kotlin/binary_compatibility_validator/targets/BCVTargetDefaults;
	public abstract fun getIgnoredProjects ()Lorg/gradle/api/provider/SetProperty;
}

public final class dev/adamko/kotlin/binary_compatibility_validator/BCVSettingsPlugin$apply$1$inlined$sam$i$org_gradle_api_Action$0 : org/gradle/api/Action {
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public final synthetic fun execute (Ljava/lang/Object;)V
}

public final class dev/adamko/kotlin/binary_compatibility_validator/adapters/AndroidAdapterKt$createKotlinAndroidTargets$1$1$inlined$sam$i$org_gradle_api_Action$0 : org/gradle/api/Action {
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public final synthetic fun execute (Ljava/lang/Object;)V
}

public final class dev/adamko/kotlin/binary_compatibility_validator/adapters/JavaTestFixturesKt$createJavaTestFixtureTargets$1$inlined$sam$i$org_gradle_api_Action$0 : org/gradle/api/Action {
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public final synthetic fun execute (Ljava/lang/Object;)V
}

public final class dev/adamko/kotlin/binary_compatibility_validator/adapters/KotlinJvmAdapterKt$createKotlinJvmTargets$1$inlined$sam$i$org_gradle_api_Action$0 : org/gradle/api/Action {
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public final synthetic fun execute (Ljava/lang/Object;)V
}

public final class dev/adamko/kotlin/binary_compatibility_validator/adapters/KotlinMultiplatformAdapterKt$inlined$sam$i$org_gradle_api_Action$0 : org/gradle/api/Action {
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public final synthetic fun execute (Ljava/lang/Object;)V
}

public abstract interface annotation class dev/adamko/kotlin/binary_compatibility_validator/internal/BCVExperimentalApi : java/lang/annotation/Annotation {
}

public abstract class dev/adamko/kotlin/binary_compatibility_validator/targets/BCVJvmTarget : dev/adamko/kotlin/binary_compatibility_validator/targets/BCVTarget, org/gradle/api/Named {
	public abstract fun getInputClasses ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getInputJar ()Lorg/gradle/api/file/RegularFileProperty;
	public final fun getObjects ()Lorg/gradle/api/model/ObjectFactory;
	public final fun getPlatformType ()Ljava/lang/String;
}

public abstract class dev/adamko/kotlin/binary_compatibility_validator/targets/BCVKLibTarget : dev/adamko/kotlin/binary_compatibility_validator/targets/BCVTarget, dev/adamko/kotlin/binary_compatibility_validator/targets/KLibValidationSpec, org/gradle/api/Named {
	public abstract fun getCompilationDependencies ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getCurrentPlatform ()Lorg/gradle/api/provider/Property;
	public abstract fun getHasKotlinSources ()Lorg/gradle/api/provider/Property;
	public abstract fun getInputAbiFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getKlibFile ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getOutputAbiFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getSupportedByCurrentHost ()Lorg/gradle/api/provider/Property;
	public final fun getTargetName ()Ljava/lang/String;
}

public abstract class dev/adamko/kotlin/binary_compatibility_validator/targets/BCVTarget : dev/adamko/kotlin/binary_compatibility_validator/targets/BCVTargetBaseSpec, java/io/Serializable, org/gradle/api/Named, org/gradle/api/plugins/ExtensionAware {
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public abstract fun getEnabled ()Lorg/gradle/api/provider/Property;
	public abstract fun getIgnoredClasses ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getIgnoredMarkers ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getIgnoredPackages ()Lorg/gradle/api/provider/SetProperty;
	public fun getName ()Ljava/lang/String;
	public abstract fun getPublicClasses ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getPublicMarkers ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getPublicPackages ()Lorg/gradle/api/provider/SetProperty;
}

public abstract interface class dev/adamko/kotlin/binary_compatibility_validator/targets/BCVTargetBaseSpec : java/io/Serializable {
	public abstract fun getEnabled ()Lorg/gradle/api/provider/Property;
	public abstract fun getIgnoredClasses ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getIgnoredMarkers ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getIgnoredPackages ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getPublicClasses ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getPublicMarkers ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getPublicPackages ()Lorg/gradle/api/provider/SetProperty;
}

public abstract class dev/adamko/kotlin/binary_compatibility_validator/targets/BCVTargetDefaults : dev/adamko/kotlin/binary_compatibility_validator/targets/BCVTargetBaseSpec, java/io/Serializable, org/gradle/api/plugins/ExtensionAware {
	public abstract fun getEnabled ()Lorg/gradle/api/provider/Property;
	public abstract fun getIgnoredClasses ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getIgnoredMarkers ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getIgnoredPackages ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getPublicClasses ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getPublicMarkers ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getPublicPackages ()Lorg/gradle/api/provider/SetProperty;
}

public abstract class dev/adamko/kotlin/binary_compatibility_validator/tasks/BCVApiCheckTask : dev/adamko/kotlin/binary_compatibility_validator/tasks/BCVDefaultTask {
	public abstract fun getApiBuildDir ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getExpectedApiDirPath ()Lorg/gradle/api/provider/Property;
	public final fun getProjectApiDir ()Lorg/gradle/api/provider/Provider;
	public final fun verify ()V
}

public abstract class dev/adamko/kotlin/binary_compatibility_validator/tasks/BCVApiDumpTask : dev/adamko/kotlin/binary_compatibility_validator/tasks/BCVDefaultTask {
	public final fun action ()V
	public abstract fun getApiDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getApiDumpFiles ()Lorg/gradle/api/file/ConfigurableFileCollection;
}

public abstract class dev/adamko/kotlin/binary_compatibility_validator/tasks/BCVApiGeneratePreparationTask : dev/adamko/kotlin/binary_compatibility_validator/tasks/BCVDefaultTask {
	public final fun action ()V
	public abstract fun getApiDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getApiDumpFiles ()Lorg/gradle/api/file/ConfigurableFileCollection;
}

public abstract class dev/adamko/kotlin/binary_compatibility_validator/tasks/BCVApiGenerateTask : dev/adamko/kotlin/binary_compatibility_validator/tasks/BCVDefaultTask {
	public final fun generate ()V
	public abstract fun getInputDependencies ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getOutputApiBuildDir ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getProjectName ()Lorg/gradle/api/provider/Property;
	public abstract fun getRuntimeClasspath ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public final fun getTargets ()Lorg/gradle/api/NamedDomainObjectContainer;
}

public abstract class dev/adamko/kotlin/binary_compatibility_validator/tasks/BCVDefaultTask : org/gradle/api/DefaultTask {
	public abstract fun getBcvEnabled ()Lorg/gradle/api/provider/Property;
}

public final class dev/adamko/kotlin/binary_compatibility_validator/workers/JvmSignaturesWorker$Companion {
}

public final class org/gradle/kotlin/dsl/BcvGradleDslAccessorsKt {
	public static final fun binaryCompatibilityValidator (Lorg/gradle/api/initialization/Settings;Lkotlin/jvm/functions/Function1;)V
	public static final fun getBinaryCompatibilityValidator (Lorg/gradle/api/initialization/Settings;)Ldev/adamko/kotlin/binary_compatibility_validator/BCVSettingsPlugin$Extension;
}

